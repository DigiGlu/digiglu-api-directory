swagger: "2.0"
info:
  version: "0.0.1"
  title: Experiments API
host: localhost:80
basePath: /v1
#
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
consumes:
  - application/json
produces:
  - application/json
paths:
  /experiment:
    x-swagger-router-controller: experiment
    post:
      security:
        - Bearer: []
      description: Creates a new experiment
      tags:
        - experiment
      operationId: experimentCreate
      parameters:
        - name: experiment
          in: body
          required: true
          schema:
            $ref: "#/definitions/Experiment"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Experiment"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - Bearer: []
      description: Returns an array of experiments
      tags:
        - experiment
      operationId: experimentFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: page
          in: query
          required: false
          description: ''
          type: integer
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Experiment"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}:
    x-swagger-router-controller: experiment
    patch:
      security:
        - Bearer: []
      description: Creates a new experiment
      tags:
        - experiment
      operationId: experimentUpdate
      parameters:
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: experiment
          in: body
          required: true
          schema:
            $ref: "#/definitions/Experiment"
      responses:
        "200":
          description: Update successful
          schema:
            $ref: "#/definitions/Experiment"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - Bearer: []
      description: Returns one experiment
      tags:
        - experiment
      operationId: experimentGet
      parameters:
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: fields
          in: query
          required: false
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Experiment"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/bmcRef:
    x-swagger-router-controller: bmcRef
    post:
      security:
        - Bearer: []
      description: Creates a new BMC reference
      tags:
        - experiment
        - BMC
      operationId: bmcRefCreate
      parameters:
        - name: bmcRef
          in: body
          required: true
          schema:
            $ref: "#/definitions/CanvasReference"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CanvasReference"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/sicRef:
    x-swagger-router-controller: sicRef
    post:
      security:
        - Bearer: []
      description: Creates a new SIC reference
      tags:
        - experiment
        - SIC
      operationId: sicRefCreate
      parameters:
        - name: sicRef
          in: body
          required: true
          schema:
            $ref: "#/definitions/CanvasReference"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CanvasReference"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/hypothesis:
    x-swagger-router-controller: hypothesis
    post:
      security:
        - Bearer: []
      description: Creates a new business Hypothesis
      tags:
        - experiment
      operationId: hypoCreate
      parameters:
        - name: hypothesis
          in: body
          required: true
          schema:
            $ref: "#/definitions/Hypothesis"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Hypothesis"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/hypothesis/{hypoid}:
    x-swagger-router-controller: hypothesis
    patch:
      security:
        - Bearer: []
      description: Updates a business Hypothesis
      tags:
        - experiment
      operationId: hypoUpdate
      parameters:
        - name: hypothesis
          in: body
          required: true
          schema:
            $ref: "#/definitions/Hypothesis"
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: hypoid
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Updated
          schema:
            $ref: "#/definitions/Hypothesis"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/growthModel:
    x-swagger-router-controller: growthModel
    post:
      security:
        - Bearer: []
      description: Creates a new growth Driver
      tags:
        - experiment
      operationId: driverCreate
      parameters:
        - name: driver
          in: body
          required: true
          schema:
            $ref: "#/definitions/GrowthDriver"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/GrowthDriver"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/retroEventBulk:
    x-swagger-router-controller: retroEvent
    post:
      security:
        - Bearer: []
      description: Creates a new restospective event
      tags:
        - bulk
        - retroEvent
      operationId: retroBulkCreate
      parameters:
        - name: retroEvent
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RetrospectiveEvent"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            type: array
            items:
              $ref: "#/definitions/RetrospectiveEvent"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/retroEvent:
    x-swagger-router-controller: retroEvent
    post:
      security:
        - Bearer: []
      description: Creates a new restospective event
      tags:
        - retroEvent
      operationId: retroCreate
      parameters:
        - name: retroEvent
          in: body
          required: true
          schema:
            $ref: "#/definitions/RetrospectiveEvent"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/RetrospectiveEvent"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - Bearer: []
      description: Returns an array of retrospective events
      tags:
        - retroEvent
      operationId: retroFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/RetrospectiveEvent"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/retroEvent/{eventId}:
    x-swagger-router-controller: retroEvent
    patch:
      security:
        - Bearer: []
      description: Updates a restospective event
      tags:
        - retroEvent
      operationId: retroUpdate
      parameters:
        - name: retroEvent
          in: body
          required: true
          schema:
            $ref: "#/definitions/RetrospectiveEvent"
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: eventId
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/RetrospectiveEvent"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - Bearer: []
      description: Returns a single retrospective event
      tags:
        - retroEvent
      operationId: retroGet
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: eventId
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RetrospectiveEvent"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/member:
    x-swagger-router-controller: teamMember
    post:
      security:
        - Bearer: []
      description: Creates a new team member
      tags:
        - teamMember
      operationId: memberCreate
      parameters:
        - name: teamMember
          in: body
          required: true
          schema:
            $ref: "#/definitions/TeamMember"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/TeamMember"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/TeamMember"
    get:
      security:
        - Bearer: []
      description: Returns an array of team members
      tags:
        - teamMember
      operationId: memberFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TeamMember"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/member/{memberId}:
    x-swagger-router-controller: teamMember
    get:
      security:
        - Bearer: []
      description: Get a single team member
      tags:
        - teamMember
      operationId: memberGet
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: memberId
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TeamMember"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/TeamMember"
    patch:
      security:
        - Bearer: []
      description: Updates a team member
      tags:
        - teamMember
      operationId: memberUpdate
      parameters:
        - name: teamMember
          in: body
          required: true
          schema:
            $ref: "#/definitions/TeamMember"
        - name: id
          in: path
          required: true
          description: ''
          type: string
        - name: memberId
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TeamMember"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/behaviour:
    x-swagger-router-controller: behaviour
    post:
      security:
        - Bearer: []
      description: Creates a new behaviour
      tags:
        - behaviour
      operationId: behaviourCreate
      parameters:
        - name: behaviour
          in: body
          required: true
          schema:
            $ref: "#/definitions/Behaviour"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Behaviour"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - Bearer: []
      description: Returns an array of behaviours
      tags:
        - behaviour
      operationId: behaviourFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Behaviour"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /experiment/{id}/role:
    x-swagger-router-controller: role
    get:
      security:
        - Bearer: []
      description: Returns an array of roles
      tags:
        - role
      operationId: roleFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      description: Creates a new role
      tags:
        - role
      operationId: roleCreate
      parameters:
        - name: role
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
        - name: id
          in: path
          required: true
          description: ''
          type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Role"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Behaviour:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
  Role:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      behaviourRef:
        type: array
        items:
          $ref: "#/definitions/BehaviourRef"
  BehaviourRef:
      properties:
        id:
          type: string
        weight:
          type: number
  TeamMember:
    properties:
      id:
        type: string
      memberId:
        type: string
      name:
        type: string
      color:
        type: string
      owner:
        type: string
      created:
        type: string
      modified:
        type: number
  RetrospectiveEvent:
    properties:
      id:
        type: string
      memberId:
        type: string
      status:
        type: string
      behaviour:
        type: string
      when:
        type: string
      score:
        type: number
      description:
        type: string
      owner:
        type: string
      created:
        type: string
      modified:
        type: number
  Experiment:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      visionStatement:
        type: string
      hypothesis:
        type: array
        items:
          $ref: "#/definitions/Hypothesis"
      growthModel:
        type: array
        items:
          $ref: "#/definitions/GrowthDriver"
      status:
        type: string
      businessModelRef:
        type: array
        items:
          $ref: "#/definitions/CanvasReference"
      serviceImpactRef:
        type: array
        items:
          $ref: "#/definitions/CanvasReference"
      owner:
        type: string
      userName:
        type: string
      created:
        type: string
      modified:
        type: number
      private:
        type: number
  CanvasReference:
    properties:
      href:
        type: string
      id:
        type: string
  Hypothesis:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      validationCriteria:
        type: string
      status:
        type: string
      owner:
        type: string
      created:
        type: string
      modified:
        type: string
  GrowthDriver:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      engines:
        type: array
        items:
          type: string
      target:
        type: string
      unit:
        type: string
      status:
        type: string
      owner:
        type: string
      created:
        type: string
      modified:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
